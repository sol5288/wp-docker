# version: '3.8'

networks:
  # 외부 통신을 위한 리버스 프록시 네트워크
  nginx-proxy:
    external: true
  # 워드프레스와 데이터베이스 간 내부 통신을 위한 네트워크
  wordpress-net:
    internal: true

volumes:
  wp_data:
  db_data:
  portainer_data:
  certs:
  #vhost:
  html:

services:
  # Nginx 리버스 프록시
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    labels:
      - com.github.nginx-proxy.nginx-proxy=true
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs:ro
      #- vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./vhost.d:/etc/nginx/vhost.d:ro  # ← 도메인별 설정 추가 (client_max_body_size 등)
    networks:
      - nginx-proxy
    restart: always

  # Let's Encrypt SSL 인증서 자동 발급
  nginx-proxy-acme:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=${EMAIL}
    volumes:
      - certs:/etc/nginx/certs
      #- vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  # MariaDB 데이터베이스
  wp-db:
    image: mariadb:10.11
    container_name: wp-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - wordpress-net # 내부 네트워크에만 연결하여 보안 강화
    restart: always

  # 워드프레스
  wp:
    image: wordpress:latest
    container_name: wp
    depends_on:
      - wp-db
    environment:
      WORDPRESS_DB_HOST: wp-db
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      VIRTUAL_HOST: ${DOMAIN}
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: ${DOMAIN}
      LETSENCRYPT_EMAIL: ${EMAIL}
      # 리버스 프록시 환경에서 HTTPS를 올바르게 인식하도록 설정
      WORDPRESS_CONFIG_EXTRA: |
          if (isset($$_SERVER['HTTP_X_FORWARDED_PROTO']) && $$_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
            $$_SERVER['HTTPS'] = 'on';
          }
    volumes:
      - wp_data:/var/www/html
      - ./config/php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - nginx-proxy # 외부 프록시와 연결
      - wordpress-net # 내부 DB와 연결
    restart: always

  # Portainer (도커 관리 도구)
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: portainer
  #   command: -H unix:///var/run/docker.sock
  #   environment:
  #     # Portainer도 리버스 프록시를 통해 접속하도록 설정 (예: portainer.your-domain.com)
  #     VIRTUAL_HOST: portainer.${DOMAIN}
  #     VIRTUAL_PORT: 9000
  #     LETSENCRYPT_HOST: portainer.${DOMAIN}
  #     LETSENCRYPT_EMAIL: ${EMAIL}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   networks:
  #     - nginx-proxy # 외부 프록시에만 연결
  #   restart: always